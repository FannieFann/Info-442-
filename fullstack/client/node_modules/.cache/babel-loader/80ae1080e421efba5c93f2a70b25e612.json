{"ast":null,"code":"var _jsxFileName = \"/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/view1/view1.js\";\nimport React from 'react';\nimport \"./view1.css\";\nimport Search from '../search/search.js';\nimport Filter from '../filter/filter.js';\nimport List from '../list/list.js'; // import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass View1 extends React.Component {\n  constructor() {\n    super();\n    this.changeFilter = this.changeFilter.bind(this);\n    this.changeSearch = this.changeSearch.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n    this.state = {\n      filter: {\n        \"product_type\": \"\",\n        \"theme\": \"\",\n        \"neighborhood\": \"\",\n        \"for_whom\": \"\"\n      },\n      searchtext: \"\",\n      refresh: false,\n      reset: false\n    }; // this.filter = \n    // this.searchtext = \"\"\n    // this.refresh = false\n  }\n\n  resetFilters() {\n    this.setState({\n      refresh: !this.state.refresh,\n      reset: !this.state.reset\n    });\n  }\n\n  changeFilter(filtertype, filtername, checked) {\n    var filt = this.state.filter;\n\n    if (checked) {\n      if (filt[filtertype] !== \"\") filt[filtertype] += \",\" + filtername;else filt[filtertype] += filtername;\n      this.setState(filt);\n      this.setState({\n        refresh: !this.state.refresh\n      });\n    } else {\n      var one = filt[filtertype].search(\",\" + filtername);\n      var three = filt[filtertype].search(filtername + \",\");\n      var two = filt[filtertype].search(filtername); // console.log(two)\n\n      if (one !== -1) filt[filtertype] = filt[filtertype].replace(\",\" + filtername, \"\");else if (three !== -1) filt[filtertype] = filt[filtertype].replace(filtername + \",\", \"\");else if (two !== -1) filt[filtertype] = filt[filtertype].replace(filtername, \"\");\n      this.setState(filt);\n      this.setState({\n        refresh: !this.state.refresh\n      });\n    } // this.state.filter[filtertype] = filtername\n    // this.state.refresh = !this.state.refresh\n    // console.log(checked)\n    // console.log(this.state.filter)\n\n  }\n\n  changeSearch(text) {\n    this.setState({\n      searchtext: text,\n      refresh: !this.state.refresh\n    }); // this.state.searchtext = text;\n    // this.state.refresh = !this.state.refresh\n    // console.log(this.state.searchtext)\n  }\n\n  render() {\n    return (// <FilterContext.Provider>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Search, {\n        changeSearch: this.changeSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Filter, {\n        changeFilter: this.changeFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(List, {\n        reset: this.state.reset,\n        refresh: this.state.refresh,\n        filter: this.state.filter,\n        search: this.state.searchtext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })))) // </FilterContext.Provider>\n\n    );\n  }\n\n}\n\nexport default View1; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/view1/view1.js"],"names":["React","Search","Filter","List","View1","Component","constructor","changeFilter","bind","changeSearch","resetFilters","state","filter","searchtext","refresh","reset","setState","filtertype","filtername","checked","filt","one","search","three","two","replace","text","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./view1.css\"\nimport Search from '../search/search.js'\nimport Filter from '../filter/filter.js'\nimport List from '../list/list.js'\n\n// import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\nclass View1 extends React.Component {\n    constructor () {\n      super()\n      this.changeFilter = this.changeFilter.bind(this)\n      this.changeSearch = this.changeSearch.bind(this)\n      this.resetFilters = this.resetFilters.bind(this)\n      this.state = {\n        filter: {\n        \"product_type\": \"\",\n        \"theme\": \"\",\n        \"neighborhood\": \"\",\n        \"for_whom\": \"\"\n        },\n        searchtext: \"\",\n        refresh: false,\n        reset: false\n      }\n      // this.filter = \n      // this.searchtext = \"\"\n      // this.refresh = false\n    }\n    resetFilters() {\n      this.setState({\n        refresh: !this.state.refresh,\n        reset: !this.state.reset\n      })\n    }\n    changeFilter(filtertype, filtername, checked) {\n      var filt = this.state.filter\n      if (checked) {\n        if(filt[filtertype]!==\"\")\n          filt[filtertype] += \",\" + filtername\n        else\n          filt[filtertype] += filtername\n        this.setState(filt)\n        this.setState({\n          refresh: !this.state.refresh\n        })\n      }\n      else {\n        var one = filt[filtertype].search(\",\"+filtername)\n        var three = filt[filtertype].search(filtername+\",\")\n        var two = filt[filtertype].search(filtername)\n        \n        // console.log(two)\n        if (one !== -1)\n          filt[filtertype]=filt[filtertype].replace(\",\"+filtername, \"\")\n        else if (three !== -1)\n          filt[filtertype]=filt[filtertype].replace(filtername+\",\", \"\")\n        else if (two !== -1)\n          filt[filtertype] = filt[filtertype].replace(filtername, \"\")\n        this.setState(filt)\n        this.setState({\n          refresh: !this.state.refresh\n        })\n      }\n      // this.state.filter[filtertype] = filtername\n      // this.state.refresh = !this.state.refresh\n      // console.log(checked)\n      // console.log(this.state.filter)\n    }\n\n    changeSearch(text) {\n      this.setState({\n        searchtext: text,\n        refresh: !this.state.refresh\n      })\n      // this.state.searchtext = text;\n      // this.state.refresh = !this.state.refresh\n      // console.log(this.state.searchtext)\n    }\n    \n    render() {\n    return (\n      // <FilterContext.Provider>\n      <div>\n        <Search changeSearch = {this.changeSearch}/>  \n        <div className={\"container-fluid\"}>\n          <div className=\"row\">\n            <Filter changeFilter = {this.changeFilter}/>\n            \n            <List reset={this.state.reset} refresh = {this.state.refresh} filter = {this.state.filter} search = {this.state.searchtext}/>\n          </div>\n            \n        </div>\n        \n      </div>\n      // </FilterContext.Provider>\n    )\n    }\n}\n\n\nexport default View1;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}